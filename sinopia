#!/bin/sh
### BEGIN INIT INFO
# Provides:          Sinopia npm server
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Sinpia npm server
# Description:       Sinopia server
### END INIT INFO

NAME="sinopia"
NODE_BIN_DIR=/usr/bin/$NAME
USER=`whoami`
CONFIG_PATH=/home/$USER/.config/sinopia/config.yaml
CMD="$NODE_BIN_DIR -c $CONFIG_PATH"

PIDFILE=/var/run/$NAME.pid
STDOUT_LOG=/var/log/$NAME.log
STDERR_LOG=/var/log/$NAME.log

get_pid() {
    cat "$PIDFILE"    
}

is_running() {
    [ -f "$PIDFILE" ] && ps `get_pid` > /dev/null 2>&1
}

case "$1" in
    start)
    if is_running; then
        echo "Already started"
    else
        echo "Starting $name"
        $CMD >> "$STDOUT_LOG" 2>> "$STDERR_LOG" &
        echo $! > "$PIDFILE"
        if ! is_running; then
            echo "Unable to start, see $STDOUT_LOG and $STDERR_LOG"
            exit 1
        fi
    fi
    ;;
    stop)
    if is_running; then
        echo -n "Stopping $name.."
        kill `get_pid`
        for i in {1..10}
        do
            if ! is_running; then
                break
            fi
            
            echo -n "."
            sleep 1
        done
        echo
        
        if is_running; then
            echo "Not stopped; may still be shutting down or shutdown may have failed"
            exit 1
        else
            echo "Stopped"
            if [ -f "$PIDFILE" ]; then
                rm "$PIDFILE"
            fi
        fi
    else
        echo "Not running"
    fi
    ;;
    restart)
    $0 stop
    if is_running; then
        echo "Unable to stop, will not attempt to start"
        exit 1
    fi
    $0 start
    ;;
    status)
    if is_running; then
        echo "Running"
    else
        echo "Stopped"
        exit 1
    fi
    ;;
    *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
